// <auto-generated />
using CSkins.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CSkins.Migrations
{
    [DbContext(typeof(SkinContext))]
    [Migration("20200113000410_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CSkins.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<int>("SkinId");

                    b.HasKey("Id");

                    b.HasIndex("SkinId");

                    b.ToTable("Review");

                    b.HasData(
                        new { Id = 1, Content = "Splendid, I must say. Gracious upon the first sip jolly ole chaps.", SkinId = 1 },
                        new { Id = 2, Content = "Quite awful in taste and overall quality mate. Do not recommend this one for a night out with the chaps", SkinId = 2 },
                        new { Id = 3, Content = "Good for a wee bit of a wakeup but not a particular favorite of mine", SkinId = 3 }
                    );
                });

            modelBuilder.Entity("CSkins.Models.Skin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Gun");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Skin");

                    b.HasData(
                        new { Id = 1, Description = "A very rare AWP skin from the Cobblestone Collection case", Gun = "AWP", ImageUrl = "/images/dragonlore.jpg", Name = "Dragon Lore" },
                        new { Id = 2, Description = "A very rare knife skin. Can be opened in several cases", Gun = "Karambit", ImageUrl = " /images/marblefade.jpg", Name = "Marble Fade" },
                        new { Id = 3, Description = "A rare AK skin opened from the Spectrum 2 collection", Gun = "M4A4", ImageUrl = "/images/empress.jpg", Name = "The Empress" }
                    );
                });

            modelBuilder.Entity("CSkins.Models.Review", b =>
                {
                    b.HasOne("CSkins.Models.Skin", "Skin")
                        .WithMany("Reviews")
                        .HasForeignKey("SkinId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
